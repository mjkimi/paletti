(()=>{class Products{async fetchProducts(){try{const res=await fetch("./data/products.json"),products=await res.json();return products}catch(err){console.log("JSON Error: "+err.message)}}}class Countries{async fetchCountries(){const res=await fetch("./data/countries.json"),countriesList=await res.json();return countriesList}}const loader=document.querySelector(".loader"),bodyContainer=document.querySelector(".body-container"),headerWrap=document.querySelector(".header-wrapper");let prevScrollPos=window.pageYOffset;class PageScroll{load(){setTimeout(()=>{loader.style.opacity=0,loader.style.display="none",bodyContainer.style.display="block",setTimeout(()=>{bodyContainer.style.opacity=1;const slider=new Slider;slider.runSlider(),updateSliderSize()},50)},2500)}scrollControl(){window.onscroll=(()=>{let currentScrollPos=window.pageYOffset;prevScrollPos>currentScrollPos?headerWrap.classList.remove("hide"):headerWrap.classList.add("hide"),prevScrollPos=currentScrollPos;const windowHeight=window.innerHeight;let top;if(currentScrollPos>productsDOM.getBoundingClientRect().top-windowHeight/2){const allArticles=document.querySelectorAll(".product");allArticles.forEach((article,i)=>{setTimeout(()=>{article.classList.add("is-showing")},150*(i+1))})}const infoGrid=document.querySelectorAll(".from-center");infoGrid.forEach(div=>{let positionFromTop;div.getBoundingClientRect().top-windowHeight<=0&&div.classList.add("fade-in")})});const scroll=new SmoothScroll(' a[href*="#"]',{speed:400})}}const slider=document.querySelector(".slider"),slides=document.querySelectorAll(".slide");let autoplay=!0,intervalTime=5e3,slideInterval;window.onresize=(()=>setTimeout(()=>{updateSliderSize()},300));const updateSliderSize=()=>{let picture=document.querySelector(".responsive-image");slider.style.height=picture.offsetHeight-15+"px";const coverImg=document.querySelector("#cover-img"),imgHeight=coverImg.clientHeight;coverImg.nextElementSibling.style.fontSize=imgHeight/3+"px"};class Slider{runSlider(){const singleSlide=document.querySelector(".slide");singleSlide.classList.add("current"),autoplay&&(slideInterval=setInterval(this.nextSlide,intervalTime)),this.sliderControl()}nextSlide(){const current=document.querySelector(".current");current.classList.remove("current"),document.querySelector(".slider").classList.add("dark-bg"),current.nextElementSibling?current.nextElementSibling.classList.add("current"):slides[0].classList.add("current")}prevSlide(){const current=document.querySelector(".current");current.classList.add("fade"),current.classList.remove("current"),current.previousElementSibling?current.previousElementSibling.classList.add("current"):slides[slides.length-1].classList.add("current")}sliderControl(){const next=document.querySelector("#next"),prev=document.querySelector("#prev"),controlBtn=document.querySelector("#control");next.addEventListener("click",e=>{this.nextSlide(),autoplay&&this.resetTime()}),prev.addEventListener("click",e=>{this.prevSlide(),autoplay&&this.resetTime()}),controlBtn.addEventListener("click",e=>{const icon=controlBtn.firstElementChild;autoplay?(autoplay=!1,clearInterval(slideInterval),icon.setAttribute("class","far fa-caret-square-right")):(autoplay=!0,slideInterval=setInterval(this.nextSlide,intervalTime),icon.setAttribute("class","far fa-pause-circle"))})}resetTime(){clearInterval(slideInterval),slideInterval=setInterval(this.nextSlide,intervalTime)}}const menuBtn=document.querySelector("#main-menu-btn"),closeBtn=document.querySelector("#btn-close"),sideMenu=document.querySelector(".side-menu"),header=document.querySelector(".header-sticky");class Menu{setupMenuEvents(){menuBtn.addEventListener("click",this.showMenu),closeBtn.addEventListener("click",this.closeMenu),sideMenu.addEventListener("click",this.closeMenu),dark.addEventListener("click",this.closeMenu)}showMenu(){closeBtn.classList.remove("closed"),sideMenu.classList.add("show"),header.classList.add("close"),showDarkOverlay()}closeMenu(){closeBtn.classList.add("closed"),sideMenu.classList.remove("show"),header.classList.remove("close"),hideDarkOverlay()}}const searchHeader=document.querySelector(".header-search"),input=document.querySelector(".input-text"),searchRes=document.querySelector("#search-result"),searchBlock=document.querySelector(".search-block"),closeSearchBtn=document.querySelector("#search-close");let products,matches;class Search{setup(items){const searchBtn=document.querySelector("#search-btn");searchBtn.addEventListener("click",()=>this.showSearchForm()),input.addEventListener("input",()=>this.searchProducts(input.value)),products=items}showSearchForm(){searchHeader.classList.remove("header-search-closed"),closeSearchBtn.classList.add("activated"),showDarkOverlay(),closeSearchBtn.addEventListener("click",()=>this.hideSearchForm()),dark.addEventListener("click",()=>this.hideSearchForm()),this.showInput()}showInput(){this.cleanAllMatch(),searchBlock.classList.add("search-block-close"),input.focus()}hideInput(){searchBlock.classList.remove("search-block-close")}hideSearchForm(){searchHeader.classList.add("header-search-closed"),closeSearchBtn.classList.remove("activated"),hideDarkOverlay(),this.hideInput()}searchProducts(searchText){matches=products.filter(product=>{const regex=new RegExp(`\\b${searchText}`,"gi");return product.title.match(regex)||product.color.match(regex)}),0===searchText.length&&this.cleanAllMatch(),this.outputHtml(matches)}cleanAllMatch(){matches=[],searchRes.innerHTML="",input.value=""}outputHtml(matches){if(matches.length>0){const html=matches.map(match=>`\n          <div class="matched">\n            <a href="#${match.id}">\n              <i class="fas fa-tint fa-xs" \n                style="color:var(--${match.color.split(",")[0]})"></i> ${match.title}\n            </a>\n          </div>\n        `).join("");searchRes.innerHTML=html}}}class Signin{setup(){const inputs=document.querySelectorAll(".text-input");inputs.forEach(input=>{input.addEventListener("input",()=>{const value=input.value.trim();input.dataset.state=value?"not-empty":""})}),document.querySelector("#sign-in-form").addEventListener("submit",e=>{e.preventDefault();const email=document.querySelector("#email").value,password=document.querySelector("#password").value;if(""===email||""===password)return document.querySelector("#error-msg").innerHTML="* This is a required field",document.querySelectorAll(".aster").forEach(span=>{span.className="error-msg"}),inputs.forEach(input=>{input.className+=" error-msg"}),!1})}}const inputMsg=document.querySelector("#design-input"),nextBtn=document.querySelector("#next-form"),backBtn=document.querySelector("#previous"),form1=document.querySelector(".message"),form2=document.querySelector(".send-to"),prompt=document.querySelector("#prompt"),yourMsg=document.querySelector("#your-message");class Personolize{setupListeners(){inputMsg.addEventListener("input",()=>this.typeMessage(inputMsg.value)),nextBtn.addEventListener("click",()=>this.showNextForm()),backBtn.addEventListener("click",()=>this.returnPrevForm())}typeMessage(text){yourMsg.innerHTML=text,prompt.innerHTML=" maximum 19 characters"}showNextForm(){const step1=[...form1.querySelectorAll(".required")];inputMsg.value?(this.hideError(step1),form1.style.display="none",form2.style.display="block"):(this.showError(step1),prompt.innerHTML="please enter your message");const contries=new Countries;contries.fetchCountries().then(countries=>{this.populate(countries)})}populate(countries){const select=document.querySelector("#select-country");!(select.children.length>1)&&countries.forEach(country=>{const newOption=document.createElement("option");newOption.value=`${country.code}`,newOption.innerHTML=`${country.name}`,select.add(newOption)})}showError(step){step.forEach(element=>element.style.visibility="visible")}hideError(step){step.forEach(element=>element.style.visibility="hidden")}returnPrevForm(){form2.style.display="none",form1.style.display="block"}}const cartBtn=document.querySelector(".cart-btn"),closeCartBtn=document.querySelector(".close-cart"),clearCartBtn=document.querySelector(".clear-cart"),cartDOM=document.querySelector(".cart"),cartItems=document.querySelector(".cart-items"),cartTotal=document.querySelector(".cart-total"),cartContent=document.querySelector(".cart-content"),productsDOM=document.querySelector(".products-center");let cart=[],buttonsDOM=[];class UI{displayProducts(products){let result="";products.forEach(product=>{isNaN(parseFloat(product.id))||(result+=`\n      <article class="product" id="${product.id}">\n          <div class="img-container">\n            <img\n              src=${product.image}\n              alt="product"\n              class="product-img"\n            />\n          </div>\n          <div class="title-wrapper">\n            <span>Paletti</span>\n            <h3>${product.title}</h3>\n          </div>\n          <div class="description-wrapper">\n            <span>${product.weight}</span>\n            <p>${product.description}</p>\n          </div>\n          <div class="booking">\n            <strong><span>$${product.price}</span></strong>\n            <button type="button" class="btn btn-action buy-now bag-btn" data-id=${product.id}><span class="btn-text">Buy now</span></button>\n          </div>\n        </article>\n      `)}),productsDOM.innerHTML=result}getProductButtons(){const buttons=[...document.querySelectorAll(".bag-btn")];buttonsDOM=buttons,buttons.forEach(button=>{let id=button.dataset.id,inCart;cart.find(item=>item.id===id)&&"personal"!==id&&(button.disabled=!0,button.firstElementChild.innerHTML="In Cart"),button.addEventListener("click",e=>{if("personal"!==id)e.currentTarget.lastElementChild.innerHTML="In Cart",e.currentTarget.disabled=!0,this.runCartProcedure(id);else{const step2=[...form2.querySelectorAll(".required")],isValidForm=document.querySelector("#receiver").checkValidity(),chocoletter=new Personolize;if(!isValidForm)return chocoletter.showError(step2),!1;chocoletter.hideError(step2),this.runCartProcedure(id)}})})}runCartProcedure(id){let cartItem={...Storage.getProduct(id),amount:1};cart=[...cart,cartItem],Storage.saveCart(cart);const cartAdd=new Cart;cartAdd.setCartValues(cart),cartAdd.addCartItem(cartItem),cartAdd.showCart()}}class Cart{setup(){cart=Storage.getCart(),this.setCartValues(cart),this.populate(cart),cartBtn.addEventListener("click",this.showCart),closeCartBtn.addEventListener("click",this.hideCart),dark.addEventListener("click",this.hideCart)}setCartValues(cart){let tempTotal=0,itemTotal=0;cart.map(item=>{tempTotal+=item.price*item.amount,itemTotal+=item.amount}),cartTotal.innerText=`$${parseFloat(tempTotal.toFixed(2))}`,cartItems.innerText=itemTotal}populate(cart){cart.forEach(item=>this.addCartItem(item))}addCartItem(item){const div=document.createElement("div");div.classList.add("cart-item"),div.innerHTML=`\n      <img src=${item.image} alt="product" />\n      <h4>${item.title}</h4>\n      <h5 class="price">$${item.price}</h5>\n      <p class="quantity">Quantity</p>\n      <p class="item-amount">${item.amount}</p>\n      <i class="fas fa-plus fa-sm" data-id=${item.id}></i>\n      <i class="fas fa-minus fa-xs" data-id=${item.id}></i>\n      <span class="remove-item" data-id=${item.id}>remove</span>\n    `,cartContent.appendChild(div)}showCart(){showDarkOverlay(),dark.classList.add("cart-overlay"),cartDOM.classList.add("showCart")}hideCart(){hideDarkOverlay(),dark.classList.remove("cart-overlay"),cartDOM.classList.remove("showCart")}cartLogic(){clearCartBtn.addEventListener("click",()=>{let offset=0,offsetDelete=300;const allCartItems=[...cartContent.children];let cartItems;cart.map(item=>item.id).forEach(id=>this.removeItem(id)),allCartItems.filter(item=>{setTimeout(()=>{item.classList.add("remove")},offset),offset+=300,setTimeout(()=>{cartContent.removeChild(item)},offsetDelete),offsetDelete+=300})}),cartContent.addEventListener("click",e=>{let clickedBtn=e.target,id=clickedBtn.dataset.id;if(clickedBtn.classList.contains("remove-item"))clickedBtn.parentElement.classList.add("remove"),setTimeout(()=>{cartContent.removeChild(clickedBtn.parentElement)},400),this.removeItem(id);else if(clickedBtn.classList.contains("fa-plus")){let item=cart.find(item=>item.id===id);item.amount+=1,Storage.saveCart(cart),this.setCartValues(cart),clickedBtn.previousElementSibling.innerText=item.amount}else if(clickedBtn.classList.contains("fa-minus")){let item=cart.find(item=>item.id===id);item.amount-=1,item.amount>0?(Storage.saveCart(cart),this.setCartValues(cart),clickedBtn.previousElementSibling.previousElementSibling.innerText=item.amount):(cartContent.removeChild(clickedBtn.parentElement),this.removeItem(id),this.hideCart())}})}removeItem(id){cart=cart.filter(item=>item.id!==id),this.setCartValues(cart),Storage.saveCart(cart);let button=buttonsDOM.find(button=>button.dataset.id===id);button.disabled=!1,"personal"!==id&&(button.firstElementChild.innerHTML="Buy now")}}class Storage{static saveProducts(products){localStorage.setItem("products",JSON.stringify(products))}static getProduct(id){let selectedItem;return JSON.parse(localStorage.getItem("products")).find(product=>product.id===id)}static saveCart(cart){localStorage.setItem("cart",JSON.stringify(cart))}static getCart(){return localStorage.getItem("cart")?JSON.parse(localStorage.getItem("cart")):[]}}const dark=document.querySelector(".dark-overlay"),body=document.body,showDarkOverlay=()=>{dark.classList.add("show"),body.classList.add("modal-opened")},hideDarkOverlay=()=>{dark.classList.remove("show"),body.classList.remove("modal-opened")};document.addEventListener("DOMContentLoaded",()=>{const scroll=new PageScroll,search=new Search,personalize=new Personolize,ui=new UI,products=new Products,cart=new Cart,menu=new Menu,signin=new Signin;products.fetchProducts().then(products=>{ui.displayProducts(products),Storage.saveProducts(products),search.setup(products)}).then(()=>{ui.getProductButtons(),cart.cartLogic()}),scroll.load(),scroll.scrollControl(),cart.setup(),personalize.setupListeners(),menu.setupMenuEvents(),signin.setup()})})();